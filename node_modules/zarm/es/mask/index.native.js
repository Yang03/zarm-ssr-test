import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React, { PureComponent } from 'react';
import { StyleSheet, View, TouchableWithoutFeedback } from 'react-native';
import maskStyle from './style/index.native';
var maskStyles = StyleSheet.create(maskStyle);

var Mask =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Mask, _PureComponent);

  function Mask() {
    _classCallCheck(this, Mask);

    return _possibleConstructorReturn(this, _getPrototypeOf(Mask).apply(this, arguments));
  }

  _createClass(Mask, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          visible = _this$props.visible,
          styles = _this$props.styles,
          type = _this$props.type,
          style = _this$props.style,
          onClick = _this$props.onClick;
      var popupCls = [styles.wrapperStyle, styles["".concat(type, "Wrapper")], style];
      return visible && React.createElement(TouchableWithoutFeedback, {
        onPress: onClick
      }, React.createElement(View, {
        style: [popupCls]
      }));
    }
  }]);

  return Mask;
}(PureComponent);

Mask.defaultProps = {
  visible: false,
  type: 'normal',
  styles: maskStyles
};
export { Mask as default };