import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React, { PureComponent } from 'react';
import classnames from 'classnames';

var Mask =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Mask, _PureComponent);

  function Mask() {
    _classCallCheck(this, Mask);

    return _possibleConstructorReturn(this, _getPrototypeOf(Mask).apply(this, arguments));
  }

  _createClass(Mask, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          visible = _this$props.visible,
          type = _this$props.type,
          others = _objectWithoutProperties(_this$props, ["prefixCls", "className", "visible", "type"]);

      var markCls = classnames(prefixCls, className, _defineProperty({}, "".concat(prefixCls, "--").concat(type), !!type));
      return visible && React.createElement("div", _extends({
        className: markCls
      }, others));
    }
  }]);

  return Mask;
}(PureComponent);

Mask.defaultProps = {
  prefixCls: 'za-mask',
  visible: false,
  type: 'normal'
};
export { Mask as default };