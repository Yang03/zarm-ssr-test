import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React, { PureComponent } from 'react';
import classnames from 'classnames';

var Panel =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Panel, _PureComponent);

  function Panel() {
    _classCallCheck(this, Panel);

    return _possibleConstructorReturn(this, _getPrototypeOf(Panel).apply(this, arguments));
  }

  _createClass(Panel, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          title = _this$props.title,
          more = _this$props.more,
          children = _this$props.children;
      var cls = classnames("".concat(prefixCls), className);
      return React.createElement("div", {
        className: cls
      }, React.createElement("div", {
        className: "".concat(prefixCls, "__header")
      }, title && React.createElement("div", {
        className: "".concat(prefixCls, "__header__title")
      }, title), more && React.createElement("div", {
        className: "".concat(prefixCls, "__header__more")
      }, more)), React.createElement("div", {
        className: "".concat(prefixCls, "__body")
      }, children));
    }
  }]);

  return Panel;
}(PureComponent);

Panel.defaultProps = {
  prefixCls: 'za-panel'
};
export { Panel as default };