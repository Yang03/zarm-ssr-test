import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React, { PureComponent, createContext } from 'react';
var defaultLocale = {};
export var LocaleContext = createContext(defaultLocale);
var runTimeLocale;

var changeRunTimeLocale = function changeRunTimeLocale(locale) {
  runTimeLocale = locale;
};

export var getRunTimeLocale = function getRunTimeLocale() {
  return runTimeLocale;
};

var LocaleProvider =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(LocaleProvider, _PureComponent);

  function LocaleProvider() {
    _classCallCheck(this, LocaleProvider);

    return _possibleConstructorReturn(this, _getPrototypeOf(LocaleProvider).apply(this, arguments));
  }

  _createClass(LocaleProvider, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          locale = _this$props.locale;
      changeRunTimeLocale(locale);
      return React.createElement(LocaleContext.Provider, {
        value: locale
      }, React.Children.only(children));
    }
  }]);

  return LocaleProvider;
}(PureComponent);

LocaleProvider.defaultProps = {
  locale: {}
};
export { LocaleProvider as default };