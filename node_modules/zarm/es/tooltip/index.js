import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React from 'react';
import Popper from '../popper';

var Tooltip =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Tooltip, _React$Component);

  function Tooltip() {
    _classCallCheck(this, Tooltip);

    return _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).apply(this, arguments));
  }

  _createClass(Tooltip, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content,
          others = _objectWithoutProperties(_this$props, ["children", "content"]);

      return !content ? React.createElement(Popper, _extends({
        content: content
      }, others), children) : children;
    }
  }], [{
    key: "updateAll",
    value: function updateAll() {
      Popper.update();
    }
  }]);

  return Tooltip;
}(React.Component);

Tooltip.defaultProps = {
  prefixCls: 'za-tooltip',
  direction: 'top',
  hasArrow: true,
  onVisibleChange: function onVisibleChange() {}
};
export default Tooltip;