import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";

/**
 * 目前用于 modal 的导航，提供简单的返回、确定
 * 一般页面跳转使用 react-navigation
 *
 * showRight: 是否展示右边按钮，默认展示
 * leftText：左边按钮文案
 * rightText： 右边按钮文案
 * onClickLeft： 左边按钮点击事件
 * onClickRight： 右边按钮点击事件
 */
import React, { PureComponent } from 'react';
import { StyleSheet, View, TouchableOpacity, Text, StatusBar, Platform } from 'react-native';
import navBarStyle from './style/index.native';
var navBarStyles = StyleSheet.create(navBarStyle);
var PADDING_TOP = Platform.OS === 'ios' ? 20 : 0;

var NavBar =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(NavBar, _PureComponent);

  function NavBar() {
    _classCallCheck(this, NavBar);

    return _possibleConstructorReturn(this, _getPrototypeOf(NavBar).apply(this, arguments));
  }

  _createClass(NavBar, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          styles = _this$props.styles,
          style = _this$props.style,
          left = _this$props.left,
          right = _this$props.right;
      var navBarWrapperStyle = [styles.navBarWrapper, style, {
        paddingTop: PADDING_TOP
      }];
      var leftBtn = React.createElement(TouchableOpacity, null, React.createElement(Text, {
        style: [styles.btn]
      }, left));
      var rightBtn = right ? React.createElement(TouchableOpacity, null, React.createElement(Text, {
        style: [styles.btn, styles.rightBtn]
      }, right)) : React.createElement(Text, {
        style: styles.btn
      });
      return React.createElement(View, null, React.createElement(StatusBar, {
        barStyle: "default"
      }), React.createElement(View, {
        style: navBarWrapperStyle
      }, React.createElement(View, {
        style: styles.navBarBox
      }, leftBtn, React.createElement(View, {
        style: styles.titleWrapper
      }, React.createElement(Text, {
        style: styles.titleText
      }, "Photos")), rightBtn)));
    }
  }]);

  return NavBar;
}(PureComponent);

NavBar.defaultProps = {
  styles: navBarStyles
  /* leftText: '返回',
  rightText: '确定',
  showRight: true, */

};
export { NavBar as default };