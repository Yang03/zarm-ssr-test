import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React from 'react';
import classnames from 'classnames';

var NavBar =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(NavBar, _React$PureComponent);

  function NavBar() {
    _classCallCheck(this, NavBar);

    return _possibleConstructorReturn(this, _getPrototypeOf(NavBar).apply(this, arguments));
  }

  _createClass(NavBar, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          style = _this$props.style,
          title = _this$props.title,
          left = _this$props.left,
          right = _this$props.right;
      var cls = classnames(prefixCls, className);
      var titleCls = "".concat(prefixCls, "__title");
      var sideCls = "".concat(prefixCls, "__side");
      var leftCls = "".concat(sideCls, " ").concat(prefixCls, "__side--left");
      var rightCls = "".concat(sideCls, " ").concat(prefixCls, "__side--right");
      return React.createElement("div", {
        style: style,
        className: cls
      }, React.createElement("div", {
        className: leftCls
      }, left), React.createElement("div", {
        className: titleCls
      }, title), React.createElement("div", {
        className: rightCls
      }, right));
    }
  }]);

  return NavBar;
}(React.PureComponent);

NavBar.displayName = 'NavBar';
NavBar.defaultProps = {
  prefixCls: 'za-nav-bar'
};
export { NavBar as default };