import { PureComponent, ReactElement, MouseEvent, TouchEvent } from 'react';
export declare type DragEvent = MouseEvent | TouchEvent;
export interface DragState {
    startTime?: Date;
    startX?: number;
    startY?: number;
    offsetX?: number;
    offsetY?: number;
}
export interface DragProps {
    onDragStart?: (event?: DragEvent, dragState?: DragState) => void;
    onDragMove?: (event?: DragEvent, dragState?: DragState) => boolean;
    onDragEnd?: (event?: DragEvent, dragState?: DragState) => void;
}
export default class Drag extends PureComponent<DragProps, {}> {
    private currentX?;
    private currentY?;
    private dragState;
    get isDragStart(): boolean;
    onTouchStart: (event: any) => void;
    onTouchMove: (event: any) => false | undefined;
    onTouchEnd: (event: any) => false | undefined;
    render(): ReactElement<any, string | ((props: any) => ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)>;
}
