import React, { PureComponent } from 'react';
import PropsType from './PropsType';
import { DragState } from '../drag';
export interface SliderProps extends PropsType {
    prefixCls?: string;
    className?: string;
}
export interface SliderStates {
    value: number;
    prevPropsValue: number;
    tooltip: boolean;
}
export default class Slider extends PureComponent<SliderProps, SliderStates> {
    private line;
    private container;
    private offsetStart;
    static defaultProps: SliderProps;
    state: SliderStates;
    componentDidMount(): void;
    static getDerivedStateFromProps(nextProps: SliderProps, prevState: SliderStates): {
        value: number;
        prevPropsValue: number;
        tooltip: boolean;
    } | null;
    /**
     * 初始化
     */
    init: () => void;
    /**
     * 通过偏移量确定值
     * @param  {number} offset 偏移量
     * @return {number}        值
     */
    getValueByOffset: (offset: number) => number;
    /**
     * 获取偏移量百分比
     * @param value
     */
    getOffsetPercent: (value: number) => string;
    /**
     * 通过值获取偏移量
     * @param  {number} value 值
     * @return {number}       偏移量
     */
    getOffsetByValue: (value: number) => number;
    /**
     * 获取最大偏移量
     */
    getMaxOffset: () => number;
    handleDragStart: () => void;
    handleDragMove: (event?: React.MouseEvent<Element, MouseEvent> | React.TouchEvent<Element> | undefined, dragState?: DragState | undefined) => boolean;
    handleDragEnd: (_event?: React.MouseEvent<Element, MouseEvent> | React.TouchEvent<Element> | undefined, dragState?: DragState | undefined) => void;
    handleRef: (ref: HTMLDivElement) => void;
    /**
     * 获取标签
     */
    renderMarkInfo: () => JSX.Element | null;
    render(): JSX.Element;
}
