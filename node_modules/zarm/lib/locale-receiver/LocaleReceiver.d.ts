import React from 'react';
declare type ComponentType = new (...args: any[]) => any;
declare const LocaleReceiverWrapper: (name?: "ActionSheet" | "Alert" | "Confirm" | "DatePicker" | "DatePickerView" | "DateSelect" | "Picker" | "Pull" | "SearchBar" | "Select" | "Keyboard" | "ImagePreview" | undefined, defaultLocale?: {
    locale: string;
    ActionSheet: {
        cancelText: string;
    };
    Alert: {
        cancelText: string;
    };
    Confirm: {
        cancelText: string;
        okText: string;
    };
    DatePicker: {
        cancelText: string;
        okText: string;
        title: string;
    };
    DatePickerView: {
        year: string;
        month: string;
        day: string;
        hour: string;
        minute: string;
    };
    DateSelect: {
        placeholder: string;
    };
    Picker: {
        cancelText: string;
        okText: string;
        title: string;
    };
    Pull: {
        pullText: string;
        dropText: string;
        loadingText: string;
        successText: string;
        failureText: string;
        completeText: string;
    };
    SearchBar: {
        placeholder: string;
        cancelText: string;
    };
    Select: {
        placeholder: string;
    };
    Keyboard: {
        okText: string;
    };
    ImagePreview: {
        loadBefore: string;
        loadStart: string;
        loadEnd: string;
    };
} | undefined) => <T extends ComponentType>(WrappedComponent: T) => T & React.ForwardRefExoticComponent<React.PropsWithoutRef<InstanceType<T>["props"]> & React.RefAttributes<InstanceType<T>>>;
export default LocaleReceiverWrapper;
