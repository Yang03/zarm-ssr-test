"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var getChecked = function getChecked(props, defaultChecked) {
  if (typeof props.checked !== 'undefined') {
    return props.checked;
  }

  if (typeof props.defaultChecked !== 'undefined') {
    return props.defaultChecked;
  }

  return defaultChecked;
};

var Switch =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Switch, _PureComponent);

  function Switch() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Switch);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Switch)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      checked: getChecked(_this.props, false)
    };

    _this.onValueChange = function () {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onChange = _this$props.onChange;
      var checked = _this.state.checked;

      if (disabled) {
        return;
      }

      var newChecked = !checked;

      if (!('checked' in _this.props)) {
        _this.setState({
          checked: newChecked
        });
      }

      if (typeof onChange === 'function') {
        onChange(newChecked);
      }
    };

    return _this;
  }

  (0, _createClass2.default)(Switch, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          disabled = _this$props2.disabled,
          style = _this$props2.style;
      var checked = this.state.checked;
      var cls = (0, _classnames2.default)(prefixCls, className, (0, _defineProperty2.default)({}, "".concat(prefixCls, "--disabled"), disabled));
      return _react.default.createElement("span", {
        className: cls,
        style: style
      }, _react.default.createElement("input", {
        type: "checkbox",
        className: "".concat(prefixCls, "__input"),
        disabled: disabled,
        checked: checked,
        onChange: this.onValueChange,
        value: checked ? 'on' : 'off'
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps) {
      if (typeof nextProps.checked !== 'undefined') {
        return {
          checked: nextProps.checked
        };
      }

      return null;
    }
  }]);
  return Switch;
}(_react.PureComponent);

exports.default = Switch;
Switch.displayName = 'Switch';
Switch.defaultProps = {
  prefixCls: 'za-switch',
  disabled: false
};