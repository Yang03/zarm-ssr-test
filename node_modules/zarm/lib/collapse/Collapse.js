"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var getActiveKey = function getActiveKey(props) {
  var multiple = props.multiple,
      activeKey = props.activeKey,
      defaultActiveKey = props.defaultActiveKey;
  var value;

  if (typeof activeKey !== 'undefined') {
    value = activeKey;
  }

  if (typeof defaultActiveKey !== 'undefined') {
    value = defaultActiveKey;
  }

  if (value) {
    return multiple ? [].concat(value) : value;
  }

  return multiple ? [] : undefined;
};

var Collapse =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Collapse, _Component);

  function Collapse() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Collapse);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Collapse)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      activeKey: getActiveKey(_this.props)
    };

    _this.onItemChange = function (onItemChange, key) {
      if (!key) {
        return;
      }

      var activeKey = _this.state.activeKey;
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          multiple = _this$props.multiple;
      var isActive;
      var newActiveKey;

      if (multiple) {
        newActiveKey = [];
        activeKey = activeKey || [];

        if (activeKey.indexOf(key) > -1) {
          newActiveKey = activeKey.filter(function (i) {
            return i !== key;
          });
        } else {
          newActiveKey = activeKey.slice(0);
          newActiveKey.push(key);
        }

        isActive = newActiveKey.indexOf(key) > -1;
      } else {
        activeKey = activeKey;
        newActiveKey = activeKey === key ? undefined : key;
        isActive = activeKey === key;
      }

      if (!('activeKey' in _this.props)) {
        _this.setState({
          activeKey: newActiveKey
        });
      }

      typeof onItemChange === 'function' && onItemChange(isActive);
      typeof onChange === 'function' && onChange(newActiveKey);
    };

    _this.renderItems = function () {
      var _this$state = _this.state,
          activeKey = _this$state.activeKey,
          multiple = _this$state.multiple,
          animated = _this$state.animated;
      return _react.Children.map(_this.props.children, function (ele) {
        var _ele$props = ele.props,
            disabled = _ele$props.disabled,
            _onChange = _ele$props.onChange;
        var key = ele.key;
        var isActive = multiple ? (activeKey || []).indexOf(key) > -1 : activeKey === key;
        return (0, _react.cloneElement)(ele, {
          animated: animated,
          isActive: isActive,
          onChange: function onChange() {
            return !disabled && _this.onItemChange(_onChange, key);
          }
        });
      });
    };

    return _this;
  }

  (0, _createClass2.default)(Collapse, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          onChange = _this$props2.onChange,
          animated = _this$props2.animated,
          activeKey = _this$props2.activeKey,
          defaultActiveKey = _this$props2.defaultActiveKey,
          rest = (0, _objectWithoutProperties2.default)(_this$props2, ["prefixCls", "className", "onChange", "animated", "activeKey", "defaultActiveKey"]);
      var animatedState = this.state.animated;
      var cls = (0, _classnames2.default)(prefixCls, className, (0, _defineProperty2.default)({}, "".concat(prefixCls, "--animated"), animatedState));
      return _react.default.createElement("div", (0, _extends2.default)({
        className: cls
      }, rest), this.renderItems());
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      var newState = {};

      if ('activeKey' in nextProps && nextProps.activeKey !== state.prevActiveKey) {
        newState.activeKey = getActiveKey(nextProps);
        newState.prevActiveKey = nextProps.activeKey;
      }

      if ('animated' in nextProps) {
        newState.animated = nextProps.animated;
      }

      if ('multiple' in nextProps) {
        newState.multiple = nextProps.multiple;
      }

      return 'activeKey' in newState || 'animated' in newState || 'multiple' in newState ? newState : null;
    }
  }]);
  return Collapse;
}(_react.Component);

exports.default = Collapse;
Collapse.defaultProps = {
  prefixCls: 'za-collapse',
  multiple: false,
  animated: false,
  onChange: function onChange() {}
};
Collapse.Item = void 0;