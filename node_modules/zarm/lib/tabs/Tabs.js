"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _classnames3 = _interopRequireDefault(require("classnames"));

var _TabPanel = _interopRequireDefault(require("./TabPanel"));

var _carousel = _interopRequireDefault(require("../carousel"));

var _index = require("./util/index");

var _dom = require("../utils/dom");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var getSelectIndex = function getSelectIndex(children) {
  var selectIndex;

  _react.default.Children.forEach(children, function (item, index) {
    if (item.props && item.props.selected) {
      selectIndex = index;
    }
  });

  return selectIndex;
};

var Tabs =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Tabs, _PureComponent);

  function Tabs(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Tabs);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Tabs).call(this, props));
    _this.carousel = void 0;
    _this.layout = void 0;

    _this.setTablistRef = function (ref) {
      _this.layout = ref;
    };

    _this.setCarouselRef = function (ref) {
      _this.carousel = ref;
    };

    _this.onTabChange = function (value) {
      var onChange = _this.props.onChange;

      if (!('value' in _this.props)) {
        _this.setState({
          value: value
        });
      }

      typeof onChange === 'function' && onChange(value);
    };

    _this.onTabClick = function (tab, index) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          swipeable = _this$props.swipeable;

      if (disabled || tab.props.disabled) {
        return;
      }

      if (swipeable) {
        _this.carousel && _this.carousel.onSlideTo(index);
        return;
      }

      _this.onTabChange(index);
    };

    _this.renderTabs = function (tab, index) {
      var _classnames;

      var _this$props2 = _this.props,
          prefixCls = _this$props2.prefixCls,
          disabled = _this$props2.disabled;
      var value = _this.state.value;
      var itemCls = (0, _classnames3.default)("".concat(prefixCls, "__tab"), tab.props.className, (_classnames = {}, (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "__tab--disabled"), disabled || tab.props.disabled), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "__tab--active"), value === index), _classnames));
      return _react.default.createElement("li", {
        role: "tab",
        key: +index,
        className: itemCls,
        onClick: function onClick() {
          return _this.onTabClick(tab, index);
        }
      }, tab.props.title);
    };

    _this.caclLineSizePos = function () {
      var itemWidth = _this.state.itemWidth;
      var value = _this.currentValue;
      var _this$props3 = _this.props,
          children = _this$props3.children,
          scrollable = _this$props3.scrollable;

      var ChildCount = _react.default.Children.count(children);

      var pos = 100 * value;

      if (scrollable && _this.layout) {
        var el = _this.layout.children[value];
        var _ref = el,
            _ref$offsetLeft = _ref.offsetLeft,
            offsetLeft = _ref$offsetLeft === void 0 ? 0 : _ref$offsetLeft,
            _ref$offsetTop = _ref.offsetTop,
            offsetTop = _ref$offsetTop === void 0 ? 0 : _ref$offsetTop;
        pos = _this.isVertical ? offsetTop : offsetLeft;
      }

      var size = scrollable ? "".concat(itemWidth, "px") : "".concat(100 / ChildCount, "%");
      var transformValue = scrollable ? (0, _index.getPxStyle)(pos, 'px', _this.isVertical) : (0, _index.getPxStyle)(pos, '%', _this.isVertical);
      var styleUl = (0, _index.getTransformPropValue)(transformValue);
      var itemSize = _this.isVertical ? {
        height: "".concat(size)
      } : {
        width: "".concat(size)
      };
      return _objectSpread({}, styleUl, {}, itemSize);
    };

    _this.calculateScorllLeftLocation = function () {
      var scrollable = _this.props.scrollable;

      if (!scrollable) {
        return false;
      }

      var value = _this.currentValue;
      var index = value - 1 >= 0 ? value - 1 : 0;
      var prevTabItem = _this.layout.childNodes[index];

      if (scrollable && _this.layout && prevTabItem) {
        var _ref2 = prevTabItem,
            _ref2$offsetTop = _ref2.offsetTop,
            top = _ref2$offsetTop === void 0 ? 0 : _ref2$offsetTop,
            _ref2$offsetLeft = _ref2.offsetLeft,
            left = _ref2$offsetLeft === void 0 ? 0 : _ref2$offsetLeft;
        (0, _dom.scrollTo)(_this.layout, top, left, 0.3);
      }
    };

    _this.calculateLineWidth = function () {
      var scrollable = _this.props.scrollable;

      if (!scrollable) {
        return;
      }

      var value = _this.currentValue;
      var el = _this.layout.children[value];
      var size = _this.isVertical ? _this.getComputedStyle(el, 'height') : _this.getComputedStyle(el, 'width');

      _this.setState({
        itemWidth: parseInt(size, 10)
      });
    };

    _this.getComputedStyle = function (el, prop) {
      var value = '0';

      if (prop in el.style) {
        value = el.style[prop] || getComputedStyle(el).getPropertyValue(prop) || '0';
      }

      return value;
    };

    _this.state = {
      value: props.value || props.defaultValue || getSelectIndex(props.children) || 0,
      itemWidth: 0
    };
    return _this;
  }

  (0, _createClass2.default)(Tabs, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.calculateLineWidth();
      this.calculateScorllLeftLocation();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevstate) {
      var prevValue = prevstate.value;
      var value = this.state.value;

      if (prevValue !== value) {
        this.calculateLineWidth();
      }

      this.calculateScorllLeftLocation();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props4 = this.props,
          prefixCls = _this$props4.prefixCls,
          className = _this$props4.className,
          lineWidth = _this$props4.lineWidth,
          swipeable = _this$props4.swipeable,
          children = _this$props4.children,
          disabled = _this$props4.disabled,
          scrollable = _this$props4.scrollable,
          direction = _this$props4.direction;
      var value = this.currentValue;
      var classes = (0, _classnames3.default)(prefixCls, className, "".concat(prefixCls, "--").concat(direction), (0, _defineProperty2.default)({}, "".concat(prefixCls, "--scroll"), scrollable)); // 渲染选项

      var tabsRender = _react.default.Children.map(children, this.renderTabs); // 渲染内容


      var contentRender;

      if (swipeable) {
        contentRender = _react.default.createElement(_carousel.default, {
          swipeable: !disabled,
          direction: direction === 'vertical' ? 'up' : 'left',
          showPagination: false,
          activeIndex: value,
          ref: this.setCarouselRef,
          onChange: function onChange(v) {
            _this2.onTabChange(v);
          }
        }, _react.default.Children.map(children, function (item, index) {
          return _react.default.createElement("div", {
            key: +index
          }, item.props.children);
        }));
      } else {
        contentRender = _react.default.Children.map(children, function (item, index) {
          return item.props.children && _react.default.createElement(_TabPanel.default, (0, _extends2.default)({}, item.props, {
            selected: value === index
          }));
        });
      }

      var lineStyle = this.caclLineSizePos();
      var lineInnerRender;

      if (lineWidth) {
        lineStyle.backgroundColor = 'transparent';
        lineInnerRender = _react.default.createElement("span", {
          className: "".concat(prefixCls, "__line__inner"),
          style: {
            width: lineWidth
          }
        });
      }

      return _react.default.createElement("div", {
        className: classes
      }, _react.default.createElement("div", {
        className: "".concat(prefixCls, "__header")
      }, _react.default.createElement("ul", {
        className: "".concat(prefixCls, "__tablist"),
        role: "tablist",
        ref: this.setTablistRef
      }, tabsRender, _react.default.createElement("div", {
        className: "".concat(prefixCls, "__line"),
        style: lineStyle
      }, lineInnerRender))), _react.default.createElement("div", {
        className: "".concat(prefixCls, "__body")
      }, contentRender));
    }
  }, {
    key: "isVertical",
    get: function get() {
      var direction = this.props.direction;
      return direction === 'vertical';
    }
  }, {
    key: "currentValue",
    get: function get() {
      var value = this.state.value;
      var children = this.props.children;

      var count = _react.default.Children.count(children);

      if (value < 0) {
        return 0;
      }

      if (value > count - 1) {
        return count - 1;
      }

      return value;
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      if ('value' in nextProps && nextProps.value !== state.prevValue) {
        return {
          value: nextProps.value,
          prevValue: nextProps.value
        };
      }

      return null;
    }
  }]);
  return Tabs;
}(_react.PureComponent);

exports.default = Tabs;
Tabs.Panel = void 0;
Tabs.defaultProps = {
  prefixCls: 'za-tabs',
  disabled: false,
  swipeable: false,
  scrollable: false,
  direction: 'horizontal'
};