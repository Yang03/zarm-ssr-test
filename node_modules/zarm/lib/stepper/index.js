"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _button = _interopRequireDefault(require("../button"));

var _icon = _interopRequireDefault(require("../icon"));

var getValue = function getValue(props, defaultValue) {
  if (typeof props.value !== 'undefined') {
    return props.value;
  }

  if (typeof props.defaultValue !== 'undefined') {
    return props.defaultValue;
  }

  return defaultValue;
};

var Stepper =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Stepper, _PureComponent);

  function Stepper() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Stepper);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Stepper)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      value: getValue(_this.props, 0),
      prevPropsValue: getValue(_this.props, 0),
      lastValue: getValue(_this.props, 0)
    };

    _this.onInputChange = function (value) {
      var _value = Number(value);

      var onInputChange = _this.props.onInputChange;

      _this.setState({
        value: _value
      });

      if (typeof onInputChange === 'function') {
        onInputChange(_value);
      }
    };

    _this.onInputBlur = function (value) {
      var _this$props = _this.props,
          min = _this$props.min,
          max = _this$props.max,
          onChange = _this$props.onChange;
      value = Number(value);

      if (Number.isNaN(value)) {
        value = _this.state.lastValue;
      }

      if (min !== null && value < min) {
        value = min;
      }

      if (max !== null && value > max) {
        value = max;
      }

      _this.setState({
        value: value,
        lastValue: value
      });

      if (typeof onChange === 'function') {
        onChange(value);
      }
    };

    _this.onSubClick = function () {
      var step = _this.props.step;
      var value = _this.state.value;

      if (_this.isSubDisabled()) {
        return;
      }

      var newValue = Number(value) - step;

      _this.onInputBlur(newValue);
    };

    _this.onPlusClick = function () {
      var step = _this.props.step;
      var value = _this.state.value;

      if (_this.isPlusDisabled()) {
        return;
      }

      var newValue = Number(value) + step;

      _this.onInputBlur(newValue);
    };

    _this.isSubDisabled = function () {
      var _this$props2 = _this.props,
          min = _this$props2.min,
          disabled = _this$props2.disabled;
      var value = _this.state.value;

      if (min === null) {
        return false;
      }

      return value <= min || disabled;
    };

    _this.isPlusDisabled = function () {
      var _this$props3 = _this.props,
          max = _this$props3.max,
          disabled = _this$props3.disabled;
      var value = _this.state.value;

      if (max === null) {
        return false;
      }

      return value >= max || disabled;
    };

    return _this;
  }

  (0, _createClass2.default)(Stepper, [{
    key: "render",
    value: function render() {
      var _classnames,
          _this2 = this;

      var _this$props4 = this.props,
          prefixCls = _this$props4.prefixCls,
          className = _this$props4.className,
          shape = _this$props4.shape,
          disabled = _this$props4.disabled,
          size = _this$props4.size;
      var value = this.state.value;
      var cls = (0, _classnames2.default)(prefixCls, className, (_classnames = {}, (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--").concat(shape), !!shape), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--").concat(size), !!size), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--disabled"), disabled), _classnames));
      var buttonSize = size === 'lg' ? 'sm' : 'xs';
      return _react.default.createElement("span", {
        className: cls
      }, _react.default.createElement(_button.default, {
        className: "".concat(prefixCls, "__sub"),
        size: buttonSize,
        disabled: this.isSubDisabled(),
        shape: shape,
        onClick: this.onSubClick
      }, _react.default.createElement(_icon.default, {
        type: "minus"
      })), _react.default.createElement("input", {
        className: "".concat(prefixCls, "__input"),
        type: "tel",
        value: value,
        disabled: disabled,
        onChange: function onChange(e) {
          return !disabled && _this2.onInputChange(e.target.value);
        },
        onBlur: function onBlur() {
          return !disabled && _this2.onInputBlur(value);
        }
      }), _react.default.createElement(_button.default, {
        className: "".concat(prefixCls, "__plus"),
        size: buttonSize,
        disabled: this.isPlusDisabled(),
        shape: shape,
        onClick: this.onPlusClick
      }, _react.default.createElement(_icon.default, {
        type: "add"
      })));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (typeof nextProps.value !== 'undefined' && nextProps.value !== prevState.prevPropsValue) {
        var value = Number(getValue(nextProps, 0));
        return {
          value: value,
          lastValue: value,
          prevPropsValue: value
        };
      }

      return null;
    }
  }]);
  return Stepper;
}(_react.PureComponent);

exports.default = Stepper;
Stepper.displayName = 'Stepper';
Stepper.defaultProps = {
  prefixCls: 'za-stepper',
  shape: 'radius',
  disabled: false,
  step: 1
};