"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));

var _popup = _interopRequireDefault(require("../popup"));

var _removeFnFromProps = _interopRequireDefault(require("../picker-view/utils/removeFnFromProps"));

var _datePickerView = _interopRequireDefault(require("../date-picker-view"));

var _parseState = require("../date-picker-view/utils/parseState");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DatePicker =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(DatePicker, _Component);
  (0, _createClass2.default)(DatePicker, null, [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      if (!(0, _isEqual.default)((0, _removeFnFromProps.default)(props, ['onOk', 'onCancel', 'onChange']), (0, _removeFnFromProps.default)(state.prevProps, ['onOk', 'onCancel', 'onChange']))) {
        return _objectSpread({
          prevProps: props
        }, (0, _parseState.parseState)(props));
      }

      return null;
    }
  }]);

  function DatePicker(props) {
    var _this;

    (0, _classCallCheck2.default)(this, DatePicker);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DatePicker).call(this, props));
    _this.isScrolling = false;

    _this.onCancel = function () {
      var onCancel = _this.props.onCancel;

      if (typeof onCancel === 'function') {
        onCancel();
      }
    };

    _this.onOk = function () {
      if (_this.isScrolling) {
        return false;
      }

      var onOk = _this.props.onOk;
      var date = _this.state.date;

      _this.setState({
        date: date
      });

      if (typeof onOk === 'function') {
        onOk(date);
      }
    };

    _this.onTransition = function (isScrolling) {
      var onTransition = _this.props.onTransition;
      _this.isScrolling = isScrolling;

      if (typeof onTransition === 'function') {
        onTransition(isScrolling);
      }
    };

    _this.onInit = function (selected) {
      _this.setState({
        date: selected
      });
    };

    _this.onValueChange = function (newValue) {
      var onChange = _this.props.onChange;

      _this.setState({
        date: newValue
      });

      if (typeof onChange === 'function') {
        onChange(newValue);
      }
    };

    _this.state = (0, _parseState.parseState)(props);
    return _this;
  }

  (0, _createClass2.default)(DatePicker, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          title = _this$props.title,
          okText = _this$props.okText,
          cancelText = _this$props.cancelText,
          locale = _this$props.locale,
          mountContainer = _this$props.mountContainer,
          maskClosable = _this$props.maskClosable,
          onOk = _this$props.onOk,
          onCancel = _this$props.onCancel,
          onInit = _this$props.onInit,
          visible = _this$props.visible,
          others = (0, _objectWithoutProperties2.default)(_this$props, ["prefixCls", "className", "title", "okText", "cancelText", "locale", "mountContainer", "maskClosable", "onOk", "onCancel", "onInit", "visible"]);
      var date = this.state.date;

      var noop = function noop() {};

      return _react.default.createElement(_popup.default, {
        className: className,
        visible: visible,
        onMaskClick: maskClosable ? this.onCancel : noop,
        mountContainer: mountContainer,
        destroy: true
      }, _react.default.createElement("div", {
        className: prefixCls,
        onClick: function onClick(e) {
          e.stopPropagation();
        }
      }, _react.default.createElement("div", {
        className: "".concat(prefixCls, "__header")
      }, _react.default.createElement("div", {
        className: "".concat(prefixCls, "__cancel"),
        onClick: this.onCancel
      }, cancelText || locale.cancelText), _react.default.createElement("div", {
        className: "".concat(prefixCls, "__title")
      }, title || locale.title), _react.default.createElement("div", {
        className: "".concat(prefixCls, "__submit"),
        onClick: this.onOk
      }, okText || locale.okText)), _react.default.createElement(_datePickerView.default, (0, _extends2.default)({}, others, {
        className: className,
        value: date,
        onInit: this.onInit,
        onChange: this.onValueChange,
        onTransition: function onTransition(isScrolling) {
          _this2.onTransition(isScrolling);
        }
      }))));
    }
  }]);
  return DatePicker;
}(_react.Component);

exports.default = DatePicker;
DatePicker.defaultProps = {
  mode: 'date',
  minuteStep: 1,
  prefixCls: 'za-date-picker',
  valueMember: 'value',
  maskClosable: true,
  onCancel: function onCancel() {},
  onInit: function onInit() {}
};