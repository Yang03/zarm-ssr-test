"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _popup = _interopRequireDefault(require("../popup"));

var _carousel = _interopRequireDefault(require("../carousel"));

var _pinchZoom = _interopRequireDefault(require("../pinch-zoom"));

var _activityIndicator = _interopRequireDefault(require("../activity-indicator"));

var _validate = require("../utils/validate");

var _localeReceiver = _interopRequireDefault(require("../locale-receiver"));

var LoadStatus;

(function (LoadStatus) {
  LoadStatus["before"] = "loadBefore";
  LoadStatus["start"] = "loadStart";
  LoadStatus["end"] = "loadEnd";
  LoadStatus["after"] = "loadAfter";
})(LoadStatus || (LoadStatus = {}));

var formatImages = function formatImages(images) {
  var previewImages = [];
  images.forEach(function (image) {
    if ((0, _validate.isString)(image)) {
      previewImages.push({
        url: image
      });
    } else if ((0, _validate.isObject)(image)) {
      previewImages.push({
        url: image.url,
        originUrl: image.originUrl,
        loaded: LoadStatus.before
      });
    }
  });
  return previewImages;
};

var parseState = function parseState(props) {
  var visible = props.visible,
      images = props.images;
  return {
    visible: visible,
    images: formatImages(images)
  };
};

var ImagePreview =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(ImagePreview, _Component);

  function ImagePreview() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ImagePreview);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ImagePreview)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.doubleClickTimer = void 0;
    _this.touchStartTime = void 0;
    _this.moving = void 0;
    _this.state = parseState(_this.props);

    _this.onChange = function (index) {
      var onChange = _this.props.onChange;

      _this.setState({
        currentIndex: index
      }, function () {
        if (typeof onChange === 'function') {
          onChange(index);
        }
      });
    };

    _this.close = function () {
      if (_this.moving) {
        return false;
      }

      var onClose = _this.props.onClose;

      if (typeof onClose === 'function') {
        onClose();
      }
    };

    _this.loadOrigin = function () {
      var _this$state = _this.state,
          _this$state$currentIn = _this$state.currentIndex,
          currentIndex = _this$state$currentIn === void 0 ? 0 : _this$state$currentIn,
          images = _this$state.images;
      var _images$currentIndex = images[currentIndex],
          originUrl = _images$currentIndex.originUrl,
          loaded = _images$currentIndex.loaded;

      if (loaded !== LoadStatus.before || !originUrl) {
        return;
      }

      images[currentIndex].loaded = LoadStatus.start;

      _this.setState({
        images: images
      });

      var img = new Image();

      img.onload = function () {
        images[currentIndex].loaded = LoadStatus.end;
        images[currentIndex].url = originUrl;

        _this.setState({
          images: images
        });

        setTimeout(function () {
          images[currentIndex].loaded = LoadStatus.after;

          _this.setState({
            images: images
          });
        }, 1500);
      };

      img.src = originUrl;
    };

    _this.showOriginButton = function (images, activeIndex) {
      if (images && images[activeIndex] && images[activeIndex].originUrl // && !images[activeIndex].loaded
      ) {
          return true;
        }

      return false;
    };

    _this.onWrapperTouchStart = function () {
      _this.touchStartTime = Date.now();
    };

    _this.onWrapperTouchEnd = function () {
      var deltaTime = Date.now() - _this.touchStartTime;

      var onClose = _this.props.onClose; // prevent long tap to close component

      if (deltaTime < 300) {
        if (!_this.doubleClickTimer && !_this.moving) {
          _this.doubleClickTimer = setTimeout(function () {
            _this.doubleClickTimer = null;

            if (typeof onClose === 'function') {
              onClose();
            }
          }, 300);
        } else {
          clearTimeout(_this.doubleClickTimer);
          _this.doubleClickTimer = null;
        }
      }

      _this.moving = false;
    };

    _this.onWrapperTouchMove = function () {
      if (_this.touchStartTime) {
        _this.moving = true;
      }
    };

    _this.onWrapperMouseDown = function () {
      _this.touchStartTime = Date.now();
    };

    _this.onWrapperMouseUp = function () {
      setTimeout(function () {
        _this.moving = false;
      }, 0);
      _this.touchStartTime = 0;
    };

    _this.renderImages = function () {
      var _this$props = _this.props,
          prefixCls = _this$props.prefixCls,
          minScale = _this$props.minScale,
          maxScale = _this$props.maxScale;
      var images = _this.state.images; // const width = document.body.offsetWidth;

      return images.map(function (item, i) {
        return _react.default.createElement("div", {
          className: "".concat(prefixCls, "__item"),
          key: +i
        }, _react.default.createElement(_pinchZoom.default, {
          className: "".concat(prefixCls, "__item__img"),
          minScale: minScale,
          maxScale: maxScale
        }, _react.default.createElement("img", {
          src: item.url,
          alt: "",
          draggable: false
        })));
      });
    };

    return _this;
  }

  (0, _createClass2.default)(ImagePreview, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          locale = _this$props2.locale,
          activeIndex = _this$props2.activeIndex,
          showPagination = _this$props2.showPagination;
      var _this$state2 = this.state,
          _this$state2$currentI = _this$state2.currentIndex,
          currentIndex = _this$state2$currentI === void 0 ? 0 : _this$state2$currentI,
          visible = _this$state2.visible,
          images = _this$state2.images;
      var loaded = images[currentIndex].loaded;
      return _react.default.createElement(_popup.default, {
        direction: "center",
        visible: visible,
        className: prefixCls
      }, _react.default.createElement("div", {
        className: "".concat(prefixCls, "__content"),
        onTouchStart: this.onWrapperTouchStart,
        onTouchEnd: this.onWrapperTouchEnd,
        onTouchCancel: this.onWrapperTouchEnd,
        onTouchMove: this.onWrapperTouchMove,
        onMouseDown: this.onWrapperMouseDown,
        onMouseMove: this.onWrapperTouchMove,
        onMouseUp: this.onWrapperMouseUp,
        onClick: this.close
      }, _react.default.createElement(_carousel.default, {
        showPagination: false,
        onChange: this.onChange,
        activeIndex: currentIndex
      }, visible ? this.renderImages() : [])), _react.default.createElement("div", {
        className: "".concat(prefixCls, "__footer")
      }, loaded && this.showOriginButton(images, activeIndex) && loaded !== LoadStatus.after ? _react.default.createElement("button", {
        className: "".concat(prefixCls, "__origin__button"),
        onClick: this.loadOrigin
      }, loaded === LoadStatus.start ? _react.default.createElement(_activityIndicator.default, {
        className: "".concat(prefixCls, "__loading"),
        type: "spinner"
      }) : '', locale[loaded]) : '', visible && showPagination && images && images.length > 1 && _react.default.createElement("div", {
        className: "".concat(prefixCls, "__index")
      }, currentIndex + 1, " / ", images.length)));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      if ('visible' in nextProps && nextProps.visible !== state.prevVisible || 'activeIndex' in nextProps && nextProps.activeIndex !== state.prevActiveIndex) {
        return {
          visible: nextProps.visible,
          activeIndex: nextProps.activeIndex,
          currentIndex: nextProps.activeIndex,
          images: formatImages(nextProps.images),
          prevVisible: nextProps.visible,
          prevActiveIndex: nextProps.activeIndex
        };
      }

      return null;
    } // shouldComponentUpdate(_nextProps, nextState) {
    //   const { images } = this.state;
    //   return isEqual(images, nextState.images);
    // }

  }]);
  return ImagePreview;
}(_react.Component);

ImagePreview.defaultProps = {
  prefixCls: 'za-image-preview',
  activeIndex: 0,
  showPagination: true
};

var _default = (0, _localeReceiver.default)('ImagePreview')(ImagePreview);

exports.default = _default;